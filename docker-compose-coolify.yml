services:
  postgres:
    image: postgres:alpine3.19
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - nginx-network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - nginx-network
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    restart: always
    build:
      context: ./src
      dockerfile: Dockerfile.backend
    ports:
      - 8080:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - ConnectionStrings__DefaultConnection=
      - MessageBroker__Host=
      - MessageBroker__User=
      - MessageBroker__Password=
      - JwtConfigOptions__Key=
      - JwtConfigOptions__Issuer=
      - JwtConfigOptions__Audience=
      - JwtConfigOptions__ExpiresIn=
      - EmailOptions__SenderEmail=
      - EmailOptions__Password=
      - EmailOptions__Host=
      - EmailOptions__Port=
    networks:
      - nginx-network
networks:
  nginx-network:
    driver: bridge
