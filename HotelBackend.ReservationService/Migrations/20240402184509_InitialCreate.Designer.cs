// <auto-generated />
using System;
using HotelBackend.ReservationService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelBackend.ReservationService.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240402184509_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelBackend.ReservationService.Models.GuestProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GuestProfiles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91555d72-5259-433c-a597-23eeab1da9e3"),
                            ContactEmail = "guestprofile@mail.com",
                            FirstName = "Guest",
                            LastName = "Profile"
                        });
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            Location = "Voronezh, Russia",
                            Name = "Voronezh Hotel"
                        },
                        new
                        {
                            Id = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            Location = "Moscow, Russia",
                            Name = "Moscow Hotel"
                        });
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId")
                        .IsUnique();

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec9783a1-96b0-4734-99ac-38639dda1c35"),
                            RoomTypeId = new Guid("d9c54399-f818-4e06-8983-fd997d95346c"),
                            Value = 100m
                        },
                        new
                        {
                            Id = new Guid("7c8d7dc1-2b29-446f-9575-a108129528b8"),
                            RoomTypeId = new Guid("2cf8abf4-a9df-48b6-b261-132b3de15cd9"),
                            Value = 150m
                        },
                        new
                        {
                            Id = new Guid("5d6611bb-24db-4d73-b2bc-13b515fb49df"),
                            RoomTypeId = new Guid("95afd44e-3478-4d98-855b-5b541dc00005"),
                            Value = 200m
                        },
                        new
                        {
                            Id = new Guid("d11b6257-1cb0-44ab-95d7-d4e46def9c15"),
                            RoomTypeId = new Guid("5e569fcc-2ef2-42c6-bc5f-fc534afc7616"),
                            Value = 300m
                        },
                        new
                        {
                            Id = new Guid("57f6c20f-25e4-4bc4-bbfe-55f310081878"),
                            RoomTypeId = new Guid("59acf344-ff6b-4f8a-8bcd-80131d6a8e57"),
                            Value = 350m
                        },
                        new
                        {
                            Id = new Guid("41eb8604-8018-4689-a1e1-c9c0ceb45cb0"),
                            RoomTypeId = new Guid("8454a407-1140-47f6-89d8-de6b9e9ad4cf"),
                            Value = 500m
                        });
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GuestProfileId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentId")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoomPreferences")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("GuestProfileId");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37dfb45a-77e8-4aa0-9c96-50209a772c90"),
                            CheckIn = new DateTime(2024, 4, 2, 21, 45, 8, 952, DateTimeKind.Local).AddTicks(765),
                            CheckOut = new DateTime(2024, 4, 7, 21, 45, 8, 952, DateTimeKind.Local).AddTicks(779),
                            CreationDate = new DateTime(2024, 4, 2, 21, 45, 8, 952, DateTimeKind.Local).AddTicks(702),
                            GuestProfileId = new Guid("91555d72-5259-433c-a597-23eeab1da9e3"),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            NumberOfGuests = 5,
                            PaymentStatus = 1,
                            ReservationStatus = 0,
                            RoomId = new Guid("6d2ee634-519f-48df-b701-b789aa5599a0")
                        });
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("Availability")
                        .HasColumnType("boolean");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d2ee634-519f-48df-b701-b789aa5599a0"),
                            Availability = true,
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "1S",
                            RoomTypeId = new Guid("d9c54399-f818-4e06-8983-fd997d95346c")
                        },
                        new
                        {
                            Id = new Guid("b0b061d8-6c60-4079-963b-1e13b7d4ed35"),
                            Availability = true,
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "2D",
                            RoomTypeId = new Guid("2cf8abf4-a9df-48b6-b261-132b3de15cd9")
                        },
                        new
                        {
                            Id = new Guid("10dfd202-183e-4f50-9903-2777ce05fbb9"),
                            Availability = true,
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "3E",
                            RoomTypeId = new Guid("95afd44e-3478-4d98-855b-5b541dc00005")
                        },
                        new
                        {
                            Id = new Guid("b2c3c1e7-de5e-43cf-865f-b40ab6554d66"),
                            Availability = false,
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "1Q",
                            RoomTypeId = new Guid("59acf344-ff6b-4f8a-8bcd-80131d6a8e57")
                        },
                        new
                        {
                            Id = new Guid("21cdd2ec-164d-416a-a9fe-51d4444d13d1"),
                            Availability = true,
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "2B",
                            RoomTypeId = new Guid("8454a407-1140-47f6-89d8-de6b9e9ad4cf")
                        });
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9c54399-f818-4e06-8983-fd997d95346c"),
                            Capacity = 1,
                            Description = "Basic room with essential amenities, ideal for budget travelers.",
                            Type = "Standard"
                        },
                        new
                        {
                            Id = new Guid("2cf8abf4-a9df-48b6-b261-132b3de15cd9"),
                            Capacity = 1,
                            Description = "Larger than a standard room with additional seating area and possibly a better view.",
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = new Guid("95afd44e-3478-4d98-855b-5b541dc00005"),
                            Capacity = 2,
                            Description = "Designed for business travelers, often including a work desk, high-speed internet, and access to an executive lounge.",
                            Type = "Executive"
                        },
                        new
                        {
                            Id = new Guid("5e569fcc-2ef2-42c6-bc5f-fc534afc7616"),
                            Capacity = 3,
                            Description = "A luxurious, spacious room with separate living and sleeping areas, often featuring upscale amenities.",
                            Type = "Suite"
                        },
                        new
                        {
                            Id = new Guid("59acf344-ff6b-4f8a-8bcd-80131d6a8e57"),
                            Capacity = 4,
                            Description = "Tailored for families, these suites offer multiple bedrooms or a larger space with sofa beds and sometimes kitchenettes.",
                            Type = "Family"
                        },
                        new
                        {
                            Id = new Guid("8454a407-1140-47f6-89d8-de6b9e9ad4cf"),
                            Capacity = 5,
                            Description = "The pinnacle of luxury, located on the top floor with panoramic views, high-end furnishings, and exclusive amenities.",
                            Type = "Penthouse"
                        });
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Price", b =>
                {
                    b.HasOne("HotelBackend.ReservationService.Models.RoomType", "RoomType")
                        .WithOne("Price")
                        .HasForeignKey("HotelBackend.ReservationService.Models.Price", "RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Reservation", b =>
                {
                    b.HasOne("HotelBackend.ReservationService.Models.GuestProfile", "GuestProfile")
                        .WithMany("Reservations")
                        .HasForeignKey("GuestProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBackend.ReservationService.Models.Hotel", "Hotel")
                        .WithMany("Reservations")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBackend.ReservationService.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuestProfile");

                    b.Navigation("Hotel");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Room", b =>
                {
                    b.HasOne("HotelBackend.ReservationService.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBackend.ReservationService.Models.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.GuestProfile", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Hotel", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.Room", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("HotelBackend.ReservationService.Models.RoomType", b =>
                {
                    b.Navigation("Price");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
