// <auto-generated />
using System;
using HotelBackend.Admin.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelBackend.Admin.Infrastructure.Migrations
{
    [DbContext(typeof(AdminDataContext))]
    [Migration("20240526074222_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("admin")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employees", "admin");
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hotels", "admin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(5762),
                            Location = "Voronezh, Russia",
                            Name = "Voronezh Hotel"
                        },
                        new
                        {
                            Id = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(5805),
                            Location = "Moscow, Russia",
                            Name = "Moscow Hotel"
                        });
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Availability")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomTypeId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms", "admin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d2ee634-519f-48df-b701-b789aa5599a0"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(5952),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "1S",
                            RoomTypeId = new Guid("d9c54399-f818-4e06-8983-fd997d95346c")
                        },
                        new
                        {
                            Id = new Guid("b0b061d8-6c60-4079-963b-1e13b7d4ed35"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(5966),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "2D",
                            RoomTypeId = new Guid("2cf8abf4-a9df-48b6-b261-132b3de15cd9")
                        },
                        new
                        {
                            Id = new Guid("10dfd202-183e-4f50-9903-2777ce05fbb9"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(5980),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "3E",
                            RoomTypeId = new Guid("95afd44e-3478-4d98-855b-5b541dc00005")
                        },
                        new
                        {
                            Id = new Guid("b2c3c1e7-de5e-43cf-865f-b40ab6554d66"),
                            Availability = false,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(5990),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "1F",
                            RoomTypeId = new Guid("59acf344-ff6b-4f8a-8bcd-80131d6a8e57")
                        },
                        new
                        {
                            Id = new Guid("21cdd2ec-164d-416a-a9fe-51d4444d13d1"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6004),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomNumber = "2P",
                            RoomTypeId = new Guid("8454a407-1140-47f6-89d8-de6b9e9ad4cf")
                        },
                        new
                        {
                            Id = new Guid("491a8c7e-3211-476e-a3af-e8113582cb32"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6158),
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "1S",
                            RoomTypeId = new Guid("5e2ec684-008c-41c0-a2a7-c80e70f6fe41")
                        },
                        new
                        {
                            Id = new Guid("efe8c495-c2d7-4a1e-ad07-d7ee546215eb"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6172),
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "2D",
                            RoomTypeId = new Guid("4cd15491-e564-44b5-b2d4-645864be718f")
                        },
                        new
                        {
                            Id = new Guid("711027f4-d0f1-4005-8acc-8cbb35228d7e"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6186),
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "3E",
                            RoomTypeId = new Guid("408198cb-8118-4e42-990b-558046ab4785")
                        },
                        new
                        {
                            Id = new Guid("59a47955-4957-4140-8a19-92868033a0d7"),
                            Availability = false,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6200),
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "1F",
                            RoomTypeId = new Guid("e401adcc-7f91-4375-8574-6f5c035861df")
                        },
                        new
                        {
                            Id = new Guid("6e0e6e38-6937-44e6-93b3-b68fdf8864e5"),
                            Availability = true,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6210),
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomNumber = "2P",
                            RoomTypeId = new Guid("98355d46-005c-4aa5-948b-cb43a52821a8")
                        });
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.RoomType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("RoomPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("RoomTypes", "admin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9c54399-f818-4e06-8983-fd997d95346c"),
                            Capacity = 1,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6047),
                            Description = "Basic room with essential amenities, ideal for budget travelers.",
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomPrice = 100m,
                            Type = "Standard"
                        },
                        new
                        {
                            Id = new Guid("2cf8abf4-a9df-48b6-b261-132b3de15cd9"),
                            Capacity = 1,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6062),
                            Description = "Larger than a standard room with additional seating area and possibly a better view.",
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomPrice = 150m,
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = new Guid("95afd44e-3478-4d98-855b-5b541dc00005"),
                            Capacity = 2,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6077),
                            Description = "Designed for business travelers, often including a work desk, high-speed internet, and access to an executive lounge.",
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomPrice = 200m,
                            Type = "Executive"
                        },
                        new
                        {
                            Id = new Guid("5e569fcc-2ef2-42c6-bc5f-fc534afc7616"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6091),
                            Description = "A luxurious, spacious room with separate living and sleeping areas, often featuring upscale amenities.",
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomPrice = 300m,
                            Type = "Suite"
                        },
                        new
                        {
                            Id = new Guid("59acf344-ff6b-4f8a-8bcd-80131d6a8e57"),
                            Capacity = 4,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6101),
                            Description = "Tailored for families, these suites offer multiple bedrooms or a larger space with sofa beds and sometimes kitchenettes.",
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomPrice = 350m,
                            Type = "Family"
                        },
                        new
                        {
                            Id = new Guid("8454a407-1140-47f6-89d8-de6b9e9ad4cf"),
                            Capacity = 5,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6115),
                            Description = "The pinnacle of luxury, located on the top floor with panoramic views, high-end furnishings, and exclusive amenities.",
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            RoomPrice = 500m,
                            Type = "Penthouse"
                        },
                        new
                        {
                            Id = new Guid("5e2ec684-008c-41c0-a2a7-c80e70f6fe41"),
                            Capacity = 1,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6244),
                            Description = "Basic room with essential amenities, ideal for budget travelers.",
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomPrice = 100m,
                            Type = "Standard"
                        },
                        new
                        {
                            Id = new Guid("4cd15491-e564-44b5-b2d4-645864be718f"),
                            Capacity = 1,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6258),
                            Description = "Larger than a standard room with additional seating area and possibly a better view.",
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomPrice = 150m,
                            Type = "Deluxe"
                        },
                        new
                        {
                            Id = new Guid("408198cb-8118-4e42-990b-558046ab4785"),
                            Capacity = 2,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6272),
                            Description = "Designed for business travelers, often including a work desk, high-speed internet, and access to an executive lounge.",
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomPrice = 200m,
                            Type = "Executive"
                        },
                        new
                        {
                            Id = new Guid("323dafa4-5aaa-48df-aff2-bbb084660335"),
                            Capacity = 3,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6286),
                            Description = "A luxurious, spacious room with separate living and sleeping areas, often featuring upscale amenities.",
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomPrice = 300m,
                            Type = "Suite"
                        },
                        new
                        {
                            Id = new Guid("e401adcc-7f91-4375-8574-6f5c035861df"),
                            Capacity = 4,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6300),
                            Description = "Tailored for families, these suites offer multiple bedrooms or a larger space with sofa beds and sometimes kitchenettes.",
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomPrice = 350m,
                            Type = "Family"
                        },
                        new
                        {
                            Id = new Guid("98355d46-005c-4aa5-948b-cb43a52821a8"),
                            Capacity = 5,
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 22, 495, DateTimeKind.Local).AddTicks(6314),
                            Description = "The pinnacle of luxury, located on the top floor with panoramic views, high-end furnishings, and exclusive amenities.",
                            HotelId = new Guid("2efb57c9-cecd-45b9-997c-4dda8400f460"),
                            RoomPrice = 500m,
                            Type = "Penthouse"
                        });
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.Room", b =>
                {
                    b.HasOne("HotelBackend.Admin.Domain.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelBackend.Admin.Domain.Entities.RoomType", "RoomType")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.RoomType", b =>
                {
                    b.HasOne("HotelBackend.Admin.Domain.Entities.Hotel", "Hotel")
                        .WithMany("RoomTypes")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.Hotel", b =>
                {
                    b.Navigation("RoomTypes");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("HotelBackend.Admin.Domain.Entities.RoomType", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
