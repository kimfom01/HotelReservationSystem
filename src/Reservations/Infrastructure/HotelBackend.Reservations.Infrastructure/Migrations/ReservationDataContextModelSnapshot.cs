// <auto-generated />
using System;
using HotelBackend.Reservations.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelBackend.Reservations.Infrastructure.Migrations
{
    [DbContext(typeof(ReservationDataContext))]
    partial class ReservationDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("reservations")
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelBackend.Reservations.Domain.Entities.GuestProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Adult")
                        .HasColumnType("boolean");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GuestProfiles", "reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("91555d72-5259-433c-a597-23eeab1da9e3"),
                            Adult = false,
                            Age = 0,
                            ContactEmail = "guestprofile@mail.com",
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 11, 864, DateTimeKind.Local).AddTicks(9755),
                            FirstName = "Guest",
                            LastName = "Profile",
                            Sex = ""
                        });
                });

            modelBuilder.Entity("HotelBackend.Reservations.Domain.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("GuestProfileId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("integer");

                    b.Property<Guid?>("PaymentId")
                        .HasMaxLength(200)
                        .HasColumnType("uuid");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("integer");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("integer");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoomPreferences")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.HasIndex("GuestProfileId");

                    b.ToTable("Reservations", "reservations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37dfb45a-77e8-4aa0-9c96-50209a772c90"),
                            CheckIn = new DateTime(2024, 5, 26, 10, 42, 11, 864, DateTimeKind.Local).AddTicks(9952),
                            CheckOut = new DateTime(2024, 5, 31, 10, 42, 11, 864, DateTimeKind.Local).AddTicks(9966),
                            CreatedAt = new DateTime(2024, 5, 26, 10, 42, 11, 864, DateTimeKind.Local).AddTicks(9932),
                            GuestProfileId = new Guid("91555d72-5259-433c-a597-23eeab1da9e3"),
                            HotelId = new Guid("772e0735-5e83-4894-aa59-d5dc56105404"),
                            NumberOfGuests = 5,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomId = new Guid("6d2ee634-519f-48df-b701-b789aa5599a0")
                        });
                });

            modelBuilder.Entity("HotelBackend.Reservations.Domain.Entities.Reservation", b =>
                {
                    b.HasOne("HotelBackend.Reservations.Domain.Entities.GuestProfile", "GuestProfile")
                        .WithMany("Reservations")
                        .HasForeignKey("GuestProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuestProfile");
                });

            modelBuilder.Entity("HotelBackend.Reservations.Domain.Entities.GuestProfile", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
