services:
  #  nginx:
  #    image: nginx:stable-alpine3.17-slim
  #    volumes:
  #      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #    ports:
  #      - 8080:8080
  #    restart: always
  #    networks:
  #      - nginx-network
  postgres:
    image: postgres:alpine3.19
    restart: always
    environment:
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - nginx-network
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - nginx-network
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
  mailpit:
    image: axllent/mailpit
    restart: always
    volumes:
      - ./data:/data
    ports:
      - 8025:8025
      - 1025:1025
    networks:
      - nginx-network
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
  reservation:
    restart: always
    build:
      context: ./src
      dockerfile: Dockerfile.reservation
    ports:
      - 8081:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      admin:
        condition: service_started
    env_file:
      - ./.env
    networks:
      - nginx-network
  payment-initiator:
    restart: always
    build:
      context: ./src
      dockerfile: Dockerfile.payment
    ports:
      - 8082:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - nginx-network
  email-service:
    restart: always
    build:
      context: ./src
      dockerfile: Dockerfile.email
    depends_on:
      rabbitmq:
        condition: service_healthy
      mailpit:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - nginx-network
  admin:
    restart: always
    build:
      context: ./src
      dockerfile: Dockerfile.admin
    ports:
      - 8083:8080
    depends_on:
      rabbitmq:
        condition: service_healthy
      mailpit:
        condition: service_healthy
    env_file:
      - ./.env
    networks:
      - nginx-network
networks:
  nginx-network:
    driver: bridge
